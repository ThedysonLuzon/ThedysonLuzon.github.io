---
const { title, summary, stack = [], highlights = [], repo, caseStudy } = Astro.props;
---
<article class="project-card" aria-labelledby="project-title">
  <!-- rotating lightswind beam -->
  <div class="accent" aria-hidden="true"></div>

  <header class="pc-head">
    <h3 id="project-title" class="project-title">{title}</h3>
    {summary && <p class="summary">{summary}</p>}
  </header>

  {highlights.length > 0 && (
    <ul class="highlights">
      {highlights.map((h) => (
        <li>
          <svg viewBox="0 0 24 24" aria-hidden="true">
            <path d="M12 3l2 5 5 2-5 2-2 5-2-5-5-2 5-2 2-5z" />
          </svg>
          <span>{h}</span>
        </li>
      ))}
    </ul>
  )}

  {stack.length > 0 && (
    <ul class="stack-chips" role="list">
      {stack.map((t) => <li class="chip">{t}</li>)}
    </ul>
  )}

  <div class="links">
    {repo && (
      <a
        class="btn ghost"
        aria-label={`GitHub repository: ${title}`}
        href={repo}
        target="_blank"
        rel="noopener"
      >
        GitHub
        <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M14 3h7v7h-2V6.4L10.7 14 9.3 12.6 17.6 4H14V3Zm-2 4v2H5v10h10v-7h2v9H3V7h9Z"/></svg>
      </a>
    )}
    {caseStudy && (
      <a
        class="btn primary"
        aria-label={`Case study: ${title}`}
        href={caseStudy}
      >
        Case Study
        <svg viewBox="0 0 24 24" aria-hidden="true"><path d="M5 12h14M13 6l6 6-6 6" /></svg>
      </a>
    )}
  </div>
</article>

<style>
.project-card {
  position: relative;
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: 1.05rem 1.1rem 1.1rem;
  display: flex;
  flex-direction: column;
  gap: .6rem;
  box-shadow: var(--shadow-sm);
  overflow: hidden;
  isolation: isolate;
  transition: transform .22s ease, box-shadow .22s ease, border-color .22s ease;
}
.project-card::before {
  /* subtle glossy top hairline */
  content:"";
  position:absolute; left:12px; right:12px; top:0; height:2px; border-radius:999px;
  background: linear-gradient(90deg, transparent,
    color-mix(in srgb, var(--color-accent) 85%, transparent), transparent);
  opacity: .9;
}
.project-card:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-md);
  border-color: color-mix(in srgb, var(--color-accent) 45%, var(--color-border));
}

/* rotating conic beam behind content */
.accent {
  position: absolute; inset: -40% -10%;
  background: conic-gradient(from 0deg at 50% 50%,
    rgba(79,70,229,.25), rgba(6,182,212,.2), rgba(34,197,94,.2), rgba(79,70,229,.25));
  filter: blur(32px);
  opacity: .35;
  z-index: 0;
  animation: swirl 46s linear infinite;
}
@keyframes swirl { to { transform: rotate(360deg); } }

.pc-head { position:relative; z-index:1; }
.project-title {
  margin: 0;
  font-size: 1.08rem;
  letter-spacing: .45px;
}
.summary {
  margin: .25rem 0 .15rem;
  opacity: .92;
  font-size: .86rem;
  line-height: 1.45;
}

/* highlights with tiny star bullets */
.highlights {
  position:relative; z-index:1;
  list-style: none;
  margin: .1rem 0 .1rem; padding: 0;
  display: grid; gap: .45rem;
  font-size: .82rem; line-height:1.4;
}
.highlights li {
  display: grid; grid-template-columns: 18px 1fr; align-items: start; gap:.4rem;
  padding: .35rem .45rem; border-radius: 10px;
  background: var(--color-bg-alt);
  border: 1px solid var(--color-border);
}
.highlights svg { width: 14px; height: 14px; color: var(--color-accent); margin-top: .1rem; }

/* stack chips instead of long string */
.stack-chips {
  position:relative; z-index:1;
  display: flex; flex-wrap: wrap; gap: .45rem;
  margin: .2rem 0 .1rem; padding: 0; list-style: none;
}
.chip {
  display: inline-flex; align-items: center; gap: .35rem;
  padding: .38rem .6rem;
  border: 1px solid var(--color-border);
  background: linear-gradient(145deg, rgba(255,255,255,.03), transparent);
  border-radius: 9999px;
  font-size: .68rem; font-weight: 700; letter-spacing: .25px;
  box-shadow: var(--shadow-sm);
  transition: transform .15s ease, border-color .15s ease, color .15s ease, background .15s ease;
}
.chip:hover { transform: translateY(-1px); border-color: var(--color-accent); color: var(--color-accent); }

/* links row -> pill buttons */
.links {
  position:relative; z-index:1;
  margin-top: .15rem;
  display:flex; gap:.6rem; flex-wrap:wrap;
}
.btn {
  display: inline-flex; align-items: center; gap: .4rem;
  padding: .55rem .85rem; border-radius: 9999px;
  border: 1px solid var(--color-border);
  font-size: .76rem; font-weight: 700; letter-spacing: .35px;
  text-decoration: none;
  transition: transform .18s ease, color .18s ease, border-color .18s ease, background .18s ease, box-shadow .18s ease;
  box-shadow: var(--shadow-sm);
}
.btn svg { width: 16px; height: 16px; stroke: currentColor; fill: none; stroke-width: 2; }
.btn.ghost {
  background: var(--color-bg);
  color: var(--color-text);
}
.btn.ghost:hover,
.btn.ghost:focus-visible {
  border-color: var(--color-accent);
  color: var(--color-accent);
  transform: translateY(-1px);
}
.btn.primary {
  background: var(--color-accent);
  border-color: var(--color-accent);
  color: #fff;
  box-shadow: 0 12px 32px -14px rgba(79,70,229,.6);
}
.btn.primary:hover,
.btn.primary:focus-visible {
  filter: brightness(1.08);
  transform: translateY(-1px);
}

/* focus & a11y */
.project-card:focus-within { outline: 2px solid var(--color-accent); outline-offset: 3px; }
.btn:focus-visible { outline: 2px solid var(--color-accent); outline-offset: 2px; }

/* reduce motion */
@media (prefers-reduced-motion: reduce){
  .accent { animation: none; }
}
</style>
