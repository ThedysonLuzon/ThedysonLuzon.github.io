---
import BaseHead from "../../components/BaseHead.astro";

const title = "GreenEarthConnect – Sustainability Engagement Platform";
const description = "Community sustainability hub: track environmental impact metrics, surface local initiatives, and drive collaborative eco‑actions.";
const ogImage = "/img/greenearthconnect-arch.png"; 

const timeline = [
  { phase: "Problem", detail: "Fragmented visibility into local environmental initiatives; no unified impact dashboard." },
  { phase: "Design", detail: "Modular GraphQL API + typed schema + React dashboard for initiative browsing & impact aggregation." },
  { phase: "Data Layer", detail: "MongoDB collections with compound indexes for initiative activity & time‑series snapshots." },
  { phase: "Deployment", detail: "Containerized (Docker) with CI lint/test gates enabling predictable dev/prod parity." },
  { phase: "Optimization", detail: "Added dataloaders and targeted indexes to reduce N+1 and accelerate aggregate queries." }
];

// JSON‑LD for SEO
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "SoftwareSourceCode",
  "name": title,
  "description": description,
  "programmingLanguage": ["TypeScript", "JavaScript"],
  "codeRepository": "https://github.com/DC-Capstone1W25/greenearthconnect",
  "author": { "@type": "Person", "name": "Thedyson Eduard Luzon" }
};
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={ogImage} />
    <script type="application/ld+json">
      {JSON.stringify(jsonLd)}
    </script>
    <style>
      :root {
        --cs-max: 880px;
      }
      body {
        margin:0;
        background:var(--color-bg,#0d1117);
        color:var(--color-text,#e6e6e6);
        font-family:system-ui,-apple-system,Segoe UI,Roboto,sans-serif;
        line-height:1.55;
      }
      main.case {
        max-width:var(--cs-max);
        margin:0 auto;
        padding:2.6rem 1.2rem 5rem;
      }
      h1 {
        margin:0 0 .85rem;
        font-size:clamp(2rem,4.1vw,2.9rem);
        line-height:1.1;
        letter-spacing:.5px;
      }
      .lead {
        font-size:1.02rem;
        opacity:.9;
        margin:0 0 2rem;
        line-height:1.5;
      }
      h2 {
        margin:2.3rem 0 .9rem;
        font-size:1.18rem;
        letter-spacing:.55px;
      }
      ul, ol {
        margin:.4rem 0 1.25rem;
        padding-left:1.2rem;
      }
      li { margin:.32rem 0; }
      .tags {
        display:flex;
        flex-wrap:wrap;
        gap:.55rem;
        margin:0 0 1.6rem;
      }
      .tag {
        font-size:.6rem;
        letter-spacing:.55px;
        padding:.35rem .55rem;
        border:1px solid var(--color-border,#2a2f35);
        background:var(--color-bg-alt,#10141a);
        border-radius:999px;
        text-transform:uppercase;
        opacity:.85;
      }
      .diagram {
        width:100%;
        display:block;
        margin:1.6rem 0 2rem;
        border:1px solid var(--color-border,#2a2f35);
        border-radius:16px;
        background:var(--color-bg-alt,#10141a);
        padding:.6rem;
        object-fit:contain;
      }
      .timeline {
        list-style:none;
        padding:0;
        margin:1rem 0 1.8rem;
        border-left:2px solid var(--color-border,#2a2f35);
      }
      .timeline li {
        position:relative;
        padding:.55rem 0 .55rem 1rem;
      }
      .timeline li::before {
        content:"";
        position:absolute;
        left:-7px;
        top:1.05rem;
        width:10px;
        height:10px;
        background:var(--color-accent,#4f46e5);
        border-radius:50%;
        box-shadow:0 0 0 3px var(--color-bg,#0d1117);
      }
      .timeline strong {
        display:inline-block;
        font-size:.72rem;
        letter-spacing:.6px;
        text-transform:uppercase;
        opacity:.85;
        margin-right:.3rem;
      }
      .note-block {
        background:var(--color-bg-alt,#10141a);
        border:1px solid var(--color-border,#2a2f35);
        padding:1rem 1.05rem;
        border-radius:14px;
        font-size:.75rem;
        line-height:1.35;
        opacity:.85;
        margin:2.2rem 0 2.8rem;
      }
      a {
        color:var(--color-accent,#4f46e5);
        text-decoration:none;
      }
      a:hover { text-decoration:underline; }
      .cta-links {
        margin:2.6rem 0 0;
        display:flex;
        gap:1.2rem;
        flex-wrap:wrap;
      }
      .cta-links a.primary {
        background:var(--color-accent,#4f46e5);
        color:#fff;
        padding:.75rem 1.15rem;
        font-size:.75rem;
        font-weight:600;
        letter-spacing:.55px;
        border-radius:30px;
        border:1px solid var(--color-accent,#4f46e5);
        box-shadow:0 8px 24px -10px rgba(79,70,229,.55);
        transition:filter .25s, transform .25s;
      }
      .cta-links a.primary:hover {
        filter:brightness(1.08);
        transform:translateY(-2px);
      }
      .cta-links a.return {
        font-size:.7rem;
        letter-spacing:.5px;
        opacity:.7;
      }
      .section-hint {
        font-size:.65rem;
        opacity:.55;
        margin:-.5rem 0 1.2rem;
        letter-spacing:.5px;
      }
      @media (max-width:640px){
        .lead { font-size:.97rem; }
        h2 { font-size:1.08rem; }
      }
      @media print {
        .cta-links { display:none; }
        body { background:#fff; color:#000; }
      }
    </style>
  </head>
  <body>
    <main class="case">
      <h1>{title}</h1>
      <p class="lead">{description}</p>

      <!-- Technology Tags -->
      <div class="tags">
        <span class="tag">TypeScript</span>
        <span class="tag">React</span>
        <span class="tag">GraphQL</span>
        <span class="tag">Node.js</span>
        <span class="tag">Express</span>
        <span class="tag">MongoDB</span>
        <span class="tag">Docker</span>
        <span class="tag">CI</span>
      </div>


      <h2>Problem</h2>
      <p>
        Communities lacked a unified, data‑driven hub to aggregate local sustainability initiatives, quantify
        impact metrics (e.g. events hosted, trees planted), and surface collaboration opportunities.
        Existing tools were siloed, limiting momentum & transparency.
      </p>

      <h2>Solution Overview</h2>
      <ul>
        <li>Modular GraphQL API with strict typing & validation for consistent client contracts.</li>
        <li>Impact aggregation layer generating snapshot metrics & trend data.</li>
        <li>Componentized React dashboard with lazy‑loaded feature zones for perceived speed.</li>
        <li>Containerized workflow for reliable dev/prod parity; CI enforcing lint & test gates.</li>
      </ul>

      <h2>Architecture Highlights</h2>
      <ul>
        <li><strong>API Layer:</strong> Apollo GraphQL (schema‑first, future subscriptions/websocket events prepared).</li>
        <li><strong>Data Model:</strong> Users, Initiatives, Events, ImpactSnapshots (compound indexes for query hot paths).</li>
        <li><strong>Dataloaders:</strong> Batching & caching to eliminate N+1 resolver overhead.</li>
        <li><strong>Separation:</strong> Domain logic decoupled from transport; resolvers map to services.</li>
        <li><strong>Deployment Path:</strong> Docker image → CI pipeline → (future) K8s/ECS scaling layer.</li>
      </ul>

      <h2>Security & Quality</h2>
      <ul>
        <li>Schema validation & centralized error normalization for predictable client responses.</li>
        <li>ESLint + Prettier + TypeScript strict mode maintain code consistency & safety.</li>
        <li>Jest test scaffolding for resolvers & utility modules (coverage growth planned).</li>
        <li>Dependency scanning & minimal base image target (future hardening).</li>
      </ul>

      <h2>Performance & Optimization</h2>
      <ul>
        <li>Indexed queries for initiative & event lookups (compound indexes reduce scan cost).</li>
        <li>Dataloader caching slashes duplicate DB round trips inside a single request.</li>
        <li>Lazy route/component splits minimize initial JS payload.</li>
        <li>Potential metrics (to record): median resolver latency, cache hit ratio, p95 response time.</li>
      </ul>

      <h2>Deployment & Operations</h2>
      <ul>
        <li>Docker multi‑stage build trims image size & enforces deterministic layer caching.</li>
        <li>CI pipeline: install → lint → type check → tests → build; blocking on failures.</li>
        <li>Environment‑driven config (12‑factor alignment) for future cloud portability.</li>
        <li>Planned observability: structured logs + lightweight metrics (Prometheus / OpenTelemetry).</li>
      </ul>

      <h2>Timeline (Condensed)</h2>
      <ul class="timeline">
        {timeline.map(t => (
          <li>
            <strong>{t.phase}</strong>{t.detail}
          </li>
        ))}
      </ul>

      <div class="note-block">
        <strong>Next Focus:</strong> implement live subscription feed (initiative updates),
        enrich time‑series visualizations, introduce role‑based access, and evaluate an
        automated sustainability scoring algorithm per project.
      </div>

      <div class="cta-links">
        <a class="primary" href="https://github.com/DC-Capstone1W25/greenearthconnect" target="_blank" rel="noopener">
          View Repository ↗
        </a>
        <a class="return" href="/">← Back to Portfolio</a>
      </div>
    </main>
  </body>
</html>
