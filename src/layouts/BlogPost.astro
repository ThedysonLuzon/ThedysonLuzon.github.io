---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";

type BlogEntry = CollectionEntry<"blog">["data"];

interface Props extends BlogEntry {
  heroImageAlt?: string;
}

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  heroImageAlt = `${title} â€“ header image`
} = Astro.props as Props;

const isUpdated =
  updatedDate &&
  pubDate &&
  new Date(updatedDate).getTime() > new Date(pubDate).getTime();

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "Article",
  headline: title,
  description,
  datePublished: pubDate?.toISOString?.() || pubDate,
  ...(updatedDate
    ? { dateModified: updatedDate.toISOString?.() || updatedDate }
    : {}),
  image: heroImage ? undefined : undefined, // map if needed
  author: { "@type": "Person", name: "Thedyson Eduard Luzon" }
};
---
<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
    <script type="application/ld+json">
      {JSON.stringify(jsonLd)}
    </script>
    <style>
      body {
        margin:0;
        background:var(--color-bg);
        color:var(--color-text);
        font-family:system-ui,-apple-system,Segoe UI,Roboto,sans-serif;
        line-height:1.55;
      }
      main { margin:0; padding:0 1.1rem 4rem; }
      article {
        max-width:780px;
        margin:0 auto;
        padding-top:1.2rem;
      }
      .hero-image { margin:0 0 1.6rem; }
      .hero-image :global(img) {
        width:100%; height:auto; display:block;
        border-radius:16px;
        border:1px solid var(--color-border);
        box-shadow:0 4px 16px -6px rgba(0,0,0,.5);
      }
      header.post-header { text-align:center; margin:0 0 1.8rem; }
      header.post-header h1 {
        margin:0 0 .65rem;
        font-size:clamp(2rem,5vw,2.85rem);
        line-height:1.1; letter-spacing:.5px;
      }
      .dates {
        font-size:.75rem; letter-spacing:.6px; text-transform:uppercase;
        font-weight:500; color:var(--color-text-dim);
        display:flex; gap:.8rem; justify-content:center; flex-wrap:wrap;
        margin-bottom:.75rem;
      }
      .updated-badge {
        background:rgba(79,70,229,.15);
        color:var(--color-accent);
        padding:.25rem .55rem;
        border-radius:999px;
        font-size:.6rem;
        letter-spacing:.7px;
        font-weight:600;
      }
      hr {
        border:none; height:1px; background:var(--color-border);
        margin:1.4rem auto 0; width:100%; max-width:480px; opacity:.5;
      }
      .content { font-size:1.02rem; }
      .content :global(p){ margin:1rem 0 1.1rem; }
      .content :global(h2){
        margin:2.3rem 0 1rem; font-size:1.6rem; line-height:1.25;
      }
      .content :global(h3){
        margin:1.9rem 0 .8rem; font-size:1.25rem;
      }
      .content :global(code){
        background:var(--color-bg-alt,#10141a);
        padding:.2rem .45rem;
        border-radius:6px;
        font-size:.85em;
        border:1px solid var(--color-border);
      }
      .content :global(pre){
        background:var(--color-bg-alt,#10141a);
        border:1px solid var(--color-border);
        padding:1rem 1.1rem;
        border-radius:14px;
        overflow-x:auto;
        font-size:.85rem;
        line-height:1.45;
      }
      .content :global(blockquote){
        margin:1.6rem 0;
        padding:.9rem 1rem .9rem 1.1rem;
        background:var(--color-bg-alt,#10141a);
        border-left:4px solid var(--color-accent);
        border-radius:0 12px 12px 0;
      }
      .content :global(a){ color:var(--color-accent); text-decoration:none; }
      .content :global(a:hover){ text-decoration:underline; }
      .content :global(ul),
      .content :global(ol){ margin:1rem 0 1.25rem; padding-left:1.2rem; }
      .content :global(li){ margin:.35rem 0; }
      .content :global(img){
        max-width:100%; border-radius:12px; border:1px solid var(--color-border);
        display:block; margin:1.4rem auto;
      }
      footer.post-footer{
        margin-top:3rem; font-size:.75rem; text-align:center; opacity:.6;
      }
      :focus-visible{ outline:2px solid var(--color-accent); outline-offset:2px; }
      @media (max-width:820px){
        article{ padding-top:.6rem; }
        header.post-header h1{ font-size:clamp(1.9rem,6vw,2.5rem); }
      }
      @media print {
        body { background:#fff; color:#000; }
        nav, header.site, .site-header, footer, #theme-toggle { display:none !important; }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <article aria-labelledby="post-title" itemScope itemType="https://schema.org/Article">
        {heroImage && (
          <div class="hero-image">
            <Image
              width={1020}
              height={510}
              src={heroImage}
              alt={heroImageAlt}
              loading="eager"
              decoding="async"
              itemProp="image"
            />
          </div>
        )}

        <header class="post-header">
          <div class="dates">
            <time dateTime={new Date(pubDate).toISOString()} itemProp="datePublished">
              <FormattedDate date={pubDate} />
            </time>
            {isUpdated && (
              <span class="updated-badge">
                Updated{" "}
                <time dateTime={new Date(updatedDate!).toISOString()} itemProp="dateModified">
                  <FormattedDate date={updatedDate!} />
                </time>
              </span>
            )}
          </div>
          <h1 id="post-title" itemProp="headline">{title}</h1>
          <hr />
        </header>

        <div class="content" itemProp="articleBody">
          <slot />
        </div>
      </article>
      <Footer />
    </main>    
  </body>
</html>
