---
import '../styles/theme.css';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props as Props;
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />

    <BaseHead title={title} description={description} />

    <!-- Prevent flash-of-unstyled-theme -->
    <script>
      (function(){
        const stored = localStorage.getItem('theme');
        const prefersLight = window.matchMedia('(prefers-color-scheme: light)').matches;
        document.documentElement.dataset.theme = stored || (prefersLight ? 'light' : 'dark');
      })();
    </script>
    <script src="https://code.iconify.design/2/2.1.2/iconify.min.js"
    defer></script>
  </head>
  <body>
    <div id="progress-bar"></div>
    <Header client:idle />

    <main id="content" class="container">
      <slot />
    </main>
    <Footer />

  <script client:load>
    const io = new IntersectionObserver(
      (entries, obs) => {
        for (let e of entries) {
          if (e.isIntersecting) {
            e.target.classList.add('visible');
            obs.unobserve(e.target);
          }
        }
      },
      { threshold: 0.1 }
    );
    document.querySelectorAll('.reveal').forEach(el => io.observe(el));
  </script>

    <script type="module">
      const bar = document.getElementById('progress-bar');
      document.addEventListener('scroll', () => {
        const pct = Math.min(
          window.scrollY / (document.body.scrollHeight - window.innerHeight),
          1
        );
        bar.style.transform = `scaleX(${pct})`;
      });
    </script>
  </body>
</html>
